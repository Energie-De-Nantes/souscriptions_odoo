# Makefile pour le module Odoo souscriptions
# Simplifie les commandes de test et de d√©veloppement

# Variables
ODOO_PATH ?= odoo
ADDONS_PATH ?= /home/virgile/addons_odoo
DB_NAME ?= souscriptions_test
MODULE_NAME = souscriptions

# Couleurs
BLUE = \033[0;34m
GREEN = \033[0;32m
YELLOW = \033[1;33m
NC = \033[0m # No Color

.PHONY: help test test-all test-template test-facturation test-basic test-integration
.PHONY: install update demo clean lint coverage

# Aide par d√©faut
help:
	@echo "$(BLUE)üöÄ Makefile pour le module Odoo souscriptions$(NC)"
	@echo ""
	@echo "$(YELLOW)Tests:$(NC)"
	@echo "  test              Lancer tous les tests"
	@echo "  test-template     Tests du template de facture uniquement"
	@echo "  test-facturation  Tests de facturation uniquement"
	@echo "  test-basic        Tests basiques uniquement"
	@echo "  test-workflow     Tests de workflow/int√©gration uniquement"
	@echo "  test-ui           Tests d'interface utilisateur uniquement"
	@echo "  test-reports      Tests de rapports uniquement"
	@echo "  test-verbose      Tests avec logs d√©taill√©s"
	@echo ""
	@echo "$(YELLOW)D√©veloppement:$(NC)"
	@echo "  install           Installer le module"
	@echo "  update            Mettre √† jour le module"
	@echo "  demo              Lancer avec donn√©es de d√©mo"
	@echo "  shell             Ouvrir un shell Odoo"
	@echo ""
	@echo "$(YELLOW)Maintenance:$(NC)"
	@echo "  clean             Nettoyer les fichiers temporaires"
	@echo "  lint              Linter le code (si flake8 disponible)"
	@echo "  format            Formater le code (si black disponible)"
	@echo ""
	@echo "$(YELLOW)Variables:$(NC)"
	@echo "  DB_NAME=$(DB_NAME)"
	@echo "  ODOO_PATH=$(ODOO_PATH)"
	@echo "  ADDONS_PATH=$(ADDONS_PATH)"

# Tests
test:
	@echo "$(BLUE)üß™ Lancement de tous les tests$(NC)"
	./run_tests.sh --create-db $(DB_NAME)

test-all: test

test-template:
	@echo "$(BLUE)üß™ Tests du template de facture$(NC)"
	./run_tests.sh --template $(DB_NAME)

test-facturation:
	@echo "$(BLUE)üß™ Tests de facturation$(NC)"
	./run_tests.sh --facturation $(DB_NAME)

test-basic:
	@echo "$(BLUE)üß™ Tests basiques$(NC)"
	./run_tests.sh --basic $(DB_NAME)

test-workflow:
	@echo "$(BLUE)üß™ Tests de workflow$(NC)"
	./run_tests.sh --integration $(DB_NAME)

test-ui:
	@echo "$(BLUE)üß™ Tests d'interface utilisateur$(NC)"
	./run_tests.sh --ui $(DB_NAME)

test-reports:
	@echo "$(BLUE)üß™ Tests de rapports$(NC)"
	./run_tests.sh --reports $(DB_NAME)

test-verbose:
	@echo "$(BLUE)üß™ Tests avec logs d√©taill√©s$(NC)"
	./run_tests.sh --verbose $(DB_NAME)

# D√©veloppement
install:
	@echo "$(BLUE)üì¶ Installation du module$(NC)"
	$(ODOO_PATH) -d $(DB_NAME) -i $(MODULE_NAME) --stop-after-init --addons-path=$(ADDONS_PATH)

update:
	@echo "$(BLUE)üîÑ Mise √† jour du module$(NC)"
	$(ODOO_PATH) -d $(DB_NAME) -u $(MODULE_NAME) --stop-after-init --addons-path=$(ADDONS_PATH)

demo:
	@echo "$(BLUE)üé≠ Lancement avec donn√©es de d√©mo$(NC)"
	$(ODOO_PATH) -d $(DB_NAME) --addons-path=$(ADDONS_PATH) --dev=reload,qweb,werkzeug,xml

shell:
	@echo "$(BLUE)üêö Ouverture du shell Odoo$(NC)"
	$(ODOO_PATH) shell -d $(DB_NAME) --addons-path=$(ADDONS_PATH)

# Tests rapides pour d√©veloppement
quick-test:
	@echo "$(BLUE)‚ö° Tests rapides (sans recr√©er la DB)$(NC)"
	./run_tests.sh $(DB_NAME)

# Maintenance
clean:
	@echo "$(BLUE)üßπ Nettoyage des fichiers temporaires$(NC)"
	find . -name "*.pyc" -delete
	find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	find . -name "*.log" -delete
	rm -f /tmp/facture_*.html
	@echo "$(GREEN)‚úÖ Nettoyage termin√©$(NC)"

lint:
	@echo "$(BLUE)üîç Analyse du code avec flake8$(NC)"
	@if command -v flake8 >/dev/null 2>&1; then \
		flake8 models/ tests/ --max-line-length=120 --exclude=__pycache__; \
		echo "$(GREEN)‚úÖ Linting termin√©$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  flake8 non disponible, installation: pip install flake8$(NC)"; \
	fi

format:
	@echo "$(BLUE)üé® Formatage du code avec black$(NC)"
	@if command -v black >/dev/null 2>&1; then \
		black models/ tests/ --line-length=120; \
		echo "$(GREEN)‚úÖ Formatage termin√©$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  black non disponible, installation: pip install black$(NC)"; \
	fi

# Tests avec couverture (si pytest-odoo disponible)
coverage:
	@echo "$(BLUE)üìä Tests avec couverture de code$(NC)"
	@if command -v pytest >/dev/null 2>&1; then \
		echo "$(YELLOW)TODO: Impl√©menter les tests pytest-odoo$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  pytest non disponible$(NC)"; \
	fi

# Alias pratiques
t: test
tf: test-facturation
tt: test-template
tb: test-basic
tw: test-workflow
tu: test-ui
tr: test-reports
i: install
u: update
d: demo
s: shell
c: clean

# Validation compl√®te avant commit
pre-commit: clean lint test
	@echo "$(GREEN)‚úÖ Validation compl√®te r√©ussie, pr√™t pour commit!$(NC)"