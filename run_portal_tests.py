#!/usr/bin/env python3
"""
Script pour ex√©cuter tous les tests du portal avec le framework de tests Odoo.
"""

import sys
import os
import subprocess
from pathlib import Path

def run_odoo_tests():
    """Ex√©cute les tests Odoo du module souscriptions."""
    
    print("üß™ Ex√©cution des tests portal avec le framework Odoo")
    print("=" * 60)
    
    # Chemin vers le module
    module_path = Path(__file__).parent
    
    # Commande de test Odoo
    test_cmd = [
        'odoo',
        '--test-enable',
        '--test-tags', 'portal,portal_integration',
        '--stop-after-init',
        '--addons-path', str(module_path.parent),
        '-d', 'test_souscriptions_portal',
        '-i', 'souscriptions',
        '--log-level=test',
    ]
    
    print(f"üìã Commande : {' '.join(test_cmd)}")
    print()
    
    try:
        # Ex√©cuter les tests
        result = subprocess.run(test_cmd, capture_output=True, text=True, timeout=300)
        
        # Afficher les r√©sultats
        print("üìä STDOUT:")
        print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è  STDERR:")
            print(result.stderr)
        
        if result.returncode == 0:
            print("‚úÖ Tous les tests portal sont pass√©s !")
            
            # Compter les tests
            stdout = result.stdout
            if 'ran' in stdout and 'test' in stdout:
                print(f"üìà R√©sum√© trouv√© dans la sortie")
            
        else:
            print(f"‚ùå Tests √©chou√©s (code: {result.returncode})")
            
        return result.returncode == 0
        
    except subprocess.TimeoutExpired:
        print("‚è∞ Timeout - les tests prennent trop de temps")
        return False
    except FileNotFoundError:
        print("‚ùå Commande 'odoo' non trouv√©e")
        print("üí° V√©rifiez que Odoo est install√© et accessible")
        return False
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

def run_specific_portal_tests():
    """Ex√©cute uniquement les tests portal sp√©cifiques."""
    
    print("\nüéØ Tests portal sp√©cifiques")
    print("=" * 30)
    
    # Test d'accessibilit√© basique
    try:
        from odoo.addons.souscriptions.tests.test_portal import PortalCompatibilityTests
        
        print("üìã Test d'accessibilit√© portal...")
        if PortalCompatibilityTests.test_portal_accessibility():
            print("‚úÖ Portal accessible")
        else:
            print("‚ùå Portal non accessible")
            
        print("üìã Test de la route des p√©riodes...")
        if PortalCompatibilityTests.test_periods_route_exists():
            print("‚úÖ Route des p√©riodes existe")
        else:
            print("‚ùå Route des p√©riodes non trouv√©e")
            
    except ImportError:
        print("‚ö†Ô∏è  Tests de compatibilit√© non disponibles (Odoo non charg√©)")
    except Exception as e:
        print(f"‚ùå Erreur dans les tests sp√©cifiques: {e}")

def print_test_summary():
    """Affiche un r√©sum√© des tests disponibles."""
    
    print("\nüìö Tests portal int√©gr√©s")
    print("=" * 30)
    print("üîß Tests unitaires (unittest + Odoo):")
    print("   ‚Ä¢ test_portal_access_redirect_unauthenticated")
    print("   ‚Ä¢ test_portal_souscriptions_list_authenticated")
    print("   ‚Ä¢ test_portal_souscription_detail_authenticated")
    print("   ‚Ä¢ test_portal_periods_view_authenticated")
    print("   ‚Ä¢ test_portal_security_other_user_data")
    print("   ‚Ä¢ test_portal_invoice_links")
    print("   ‚Ä¢ test_portal_responsive_display_base_vs_hphc")
    print("   ‚Ä¢ test_portal_data_completeness")
    print("   ‚Ä¢ test_portal_breadcrumb_navigation")
    print("   ‚Ä¢ test_portal_calculations_accuracy")
    print("   ‚Ä¢ test_portal_empty_data_handling")
    
    print("\nüîó Tests d'int√©gration:")
    print("   ‚Ä¢ test_portal_menu_integration")
    print("   ‚Ä¢ test_portal_with_real_invoice_data")
    print("   ‚Ä¢ test_portal_permissions_consistency")
    
    print("\nüéØ Fonctionnalit√©s test√©es:")
    print("   ‚úÖ Authentification et s√©curit√©")
    print("   ‚úÖ Navigation et interface")
    print("   ‚úÖ Affichage des donn√©es")
    print("   ‚úÖ Calculs et totaux")
    print("   ‚úÖ Gestion des cas limites")
    print("   ‚úÖ Int√©gration avec Odoo")

def main():
    """Point d'entr√©e principal."""
    
    print("üß™ Tests Portal - Module Souscriptions")
    print("=" * 50)
    
    # Check for command line arguments
    if len(sys.argv) > 1:
        if '--help' in sys.argv or '-h' in sys.argv:
            print_test_summary()
            print("\nüìñ Usage:")
            print("  python3 run_portal_tests.py [--auto] [--summary] [--compat]")
            print("  --auto    : Ex√©cuter tous les tests automatiquement")
            print("  --summary : Afficher seulement le r√©sum√©")
            print("  --compat  : Tests de compatibilit√© uniquement")
            return 0
        
        if '--auto' in sys.argv:
            choice = "1"
        elif '--summary' in sys.argv:
            choice = "3"
        elif '--compat' in sys.argv:
            choice = "2"
        else:
            choice = "1"
    else:
        # Afficher le r√©sum√©
        print_test_summary()
        
        # Choix utilisateur
        print("\nüéØ Options d'ex√©cution:")
        print("1. Ex√©cuter tous les tests Odoo (recommand√©)")
        print("2. Tests de compatibilit√© uniquement")
        print("3. Afficher seulement le r√©sum√©")
        
        try:
            choice = input("\nVotre choix (1-3) [1]: ").strip() or "1"
        except (EOFError, KeyboardInterrupt):
            print("\n\n‚úÖ Mode automatique - Ex√©cution de tous les tests")
            choice = "1"
    
    if choice == "1":
        success = run_odoo_tests()
        run_specific_portal_tests()
        
        if success:
            print("\nüéâ Tous les tests portal int√©gr√©s sont fonctionnels !")
            print("üìç Le portal client est pr√™t pour la production.")
        else:
            print("\n‚ö†Ô∏è  Certains tests ont √©chou√© - v√©rifiez les logs ci-dessus.")
            
    elif choice == "2":
        run_specific_portal_tests()
        
    elif choice == "3":
        print("\n‚úÖ R√©sum√© affich√©. Tests disponibles via:")
        print("   python3 run_portal_tests.py")
        print("   ou")
        print("   odoo --test-enable --test-tags portal -i souscriptions")
        
    else:
        print("‚ùå Choix invalide")
        return 1
        
    return 0

if __name__ == "__main__":
    sys.exit(main())